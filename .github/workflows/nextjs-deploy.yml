name: Next.js Deploy

on:
  # Trigger deployment automatically on push to main branch
  push:
    branches: [ main ]
  # Keep the manual trigger option
  workflow_dispatch:
    inputs:
      deploy_message:
        description: 'Deployment message'
        required: true
        default: 'Manual deployment'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Check Node.js version
        run: |
          echo "Node version:"
          node -v
          echo "NPM version:"
          npm -v

      # Explicitly create .nojekyll file
      - name: Create .nojekyll file
        run: touch .nojekyll
        
      # Display package.json for debugging
      - name: Display package.json
        run: cat package.json
        
      # Clean install dependencies
      - name: Install dependencies
        run: |
          echo "Removing node_modules and package-lock.json if they exist..."
          rm -rf node_modules package-lock.json
          
          echo "Installing dependencies with a clean install..."
          npm install

      # Display installed packages
      - name: List installed packages
        run: npm list --depth=0
        
      # Verify build script in package.json
      - name: Verify build script
        run: |
          echo "Verifying build script in package.json..."
          if ! grep -q "\"build\":" package.json; then
            echo "ERROR: No build script found in package.json!"
            exit 1
          else
            echo "Build script found:"
            grep "\"build\":" package.json
          fi

      # Build with Next.js without linting with detailed error output
      - name: Build with Next.js (without linting)
        run: |
          echo "Building Next.js site without linting..."
          NODE_ENV=production npm run build -- --no-lint || {
            echo "Build failed. Checking for error logs..."
            if [ -f ".next/error.log" ]; then
              echo "Error log found:"
              cat .next/error.log
            fi
            echo "Checking for other potential issues..."
            echo "Node version:"
            node --version
            echo "NPM version:"
            npm --version
            
            # Check for missing dependencies
            echo "Checking for missing dependencies..."
            npm ls
            
            exit 1
          }
          
      # Ensure .nojekyll file is in the out directory
      - name: Ensure .nojekyll in out directory
        run: touch out/.nojekyll
          
      # List output directory contents
      - name: List output directory
        run: |
          echo "Checking output directory..."
          ls -la
          if [ -d "out" ]; then
            echo "Contents of out directory:"
            ls -la out/
            echo "Checking for CSS files:"
            find out -name "*.css" | sort
          else
            echo "out directory not found!"
            echo "Checking for other possible output directories:"
            ls -la .next/ || echo ".next directory not found"
            # If out directory doesn't exist but .next does, copy it
            if [ -d ".next" ]; then
              echo "Creating out directory from .next..."
              mkdir -p out
              cp -r .next/* out/
              touch out/.nojekyll
              ls -la out/
            fi
          fi

      # Upload the build output
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ github.token }} 